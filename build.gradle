import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0-Beta'
    id 'com.github.johnrengelman.shadow' version '8.+'
}

group = 'jp.xhw'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://jitpack.io"
    }
    maven {
        name = "minebench-repo"
        url = "https://repo.minebench.de"
    }
    maven {
        name = "codemc-snapshots"
        url = "https://repo.codemc.io/repository/maven-snapshots/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "org.jetbrains.exposed:exposed-core:0.40.1"
    implementation "org.jetbrains.exposed:exposed-dao:0.40.1"
    implementation "org.jetbrains.exposed:exposed-jdbc:0.40.1"
    implementation "org.jetbrains.exposed:exposed-java-time:0.40.1"

    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    implementation "dev.jorel:commandapi-bukkit-shade:9.1.0"
    implementation "de.themoep:inventorygui:1.6.1-SNAPSHOT"
    implementation "net.wesjd:anvilgui:1.7.0-SNAPSHOT"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileKotlin {
    compilerOptions {
        jvmTarget.set(JvmTarget.JVM_17)
    }
}

compileTestKotlin {
    compilerOptions {
        jvmTarget.set(JvmTarget.JVM_17)
    }
}

shadowJar {
    relocate("net.wesjd.anvilgui", "jp.xhw.noticebox.libs.anvilgui")
    relocate("dev.jorel.commandapi", "jp.xhw.noticebox.libs.commandapi")
    archiveFileName = "${rootProject.name}-${project.version}.jar"
}
tasks.build.dependsOn tasks.shadowJar

kotlin {
    jvmToolchain(17)
}
